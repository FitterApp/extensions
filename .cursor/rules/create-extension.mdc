---
description: 
globs: 
alwaysApply: true
---
# Creating a New Extension (Automated Workflow)

## 1. Format the Extension Name
- Always format the extension name in lowercase.
- Use dashes (-) to separate words (e.g., random-cats, macro-tracker).

## 2. Generate the Extension
- Run the following script to scaffold the extension:
  ```
    scripts/create-extension.sh <new-extension-name>
  ```
  Replace `<new-extension-name>` with the formatted name from step 1.
- The script will copy the template, rename files, and update references automatically.
- If the extension already exists, the script will abort.

## 3. Implement the Requested Functionality
- After the extension is generated, update the main component (the .vue file in src/) to implement the specific functionality requested by the user.
- Make any additional code or configuration changes needed to fulfill the userâ€™s requirements.

## 4. Final Steps
- Ensure all references, imports, and configs are correct and tailored to the new extension.
- Run `npm install` in the new extension folder before building or serving.
- Add a README with instructions and a description for your new extension if not already present.

## Notes
- All entrypoints listed in `manifest.json` must have a corresponding `.ts` file in `src/`.
- Each entrypoint can mount a different Vue component and have its own logic.
- Only copy from templates if explicitly requested.

