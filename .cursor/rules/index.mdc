---
description:
globs:
alwaysApply: false
---
# Extensions Development Guide

This is the master guide for working with the multi-extension Vue.js project. Each rule below provides detailed information about specific aspects of extension development.

## Quick Navigation

### üìÅ **Project Structure**
- **[extensions-structure.mdc](mdc:.cursor/rules/extensions-structure.mdc)** - Overall project layout and extension patterns
- How extensions are organized and what files are required

### üîå **Entry Points**
- **[entry-points.mdc](mdc:.cursor/rules/entry-points.mdc)** - Standard mount/unmount patterns
- How to create and configure entry points for extensions

### ‚öôÔ∏è **Build Configuration**
- **[vite-configuration.mdc](mdc:.cursor/rules/vite-configuration.mdc)** - Vite config patterns and settings
- How to configure build process for each extension

### üìã **Manifest Files**
- **[manifest-patterns.mdc](mdc:.cursor/rules/manifest-patterns.mdc)** - Extension metadata and entry points
- How to define extension metadata and configuration

### üöÄ **Build & Deployment**
- **[build-and-deployment.mdc](mdc:.cursor/rules/build-and-deployment.mdc)** - Build scripts and deployment
- How to build, test, and deploy extensions

### üîß **Troubleshooting**
- **[common-issues.mdc](mdc:.cursor/rules/common-issues.mdc)** - Common problems and solutions
- How to debug and fix extension issues

### üåê **API Integration**
- **[api-endpoints.mdc](mdc:.cursor/rules/api-endpoints.mdc)** - API endpoints and usage patterns
- How to interact with the Extension Data API
- **[api-query-parameters.mdc](mdc:.cursor/rules/api-query-parameters.mdc)** - Query parameters and filtering
- Advanced querying, filtering, and aggregation options
- **[api-data-model.mdc](mdc:.cursor/rules/api-data-model.mdc)** - Data model and database schema
- Understanding the ExtensionData model and database structure

## When to Use Each Rule

### **Creating a New Extension**
1. Start with [extensions-structure.mdc](mdc:.cursor/rules/extensions-structure.mdc) for folder structure
2. Follow [entry-points.mdc](mdc:.cursor/rules/entry-points.mdc) for entry point setup
3. Configure [vite-configuration.mdc](mdc:.cursor/rules/vite-configuration.mdc) for build settings
4. Create [manifest-patterns.mdc](mdc:.cursor/rules/manifest-patterns.mdc) for metadata
5. Use [build-and-deployment.mdc](mdc:.cursor/rules/build-and-deployment.mdc) to build

### **Integrating with API**
1. Understand [api-data-model.mdc](mdc:.cursor/rules/api-data-model.mdc) for data structure
2. Use [api-endpoints.mdc](mdc:.cursor/rules/api-endpoints.mdc) for basic API calls
3. Leverage [api-query-parameters.mdc](mdc:.cursor/rules/api-query-parameters.mdc) for advanced queries
4. Follow patterns for storing, querying, updating, and deleting data

### **Debugging Issues**
1. Check [common-issues.mdc](mdc:.cursor/rules/common-issues.mdc) for known problems
2. Verify [extensions-structure.mdc](mdc:.cursor/rules/extensions-structure.mdc) file requirements
3. Review [entry-points.mdc](mdc:.cursor/rules/entry-points.mdc) for mount/unmount issues
4. Check [vite-configuration.mdc](mdc:.cursor/rules/vite-configuration.mdc) for build problems
5. Validate [manifest-patterns.mdc](mdc:.cursor/rules/manifest-patterns.mdc) entry points

### **Modifying Existing Extensions**
1. Understand the current [extensions-structure.mdc](mdc:.cursor/rules/extensions-structure.mdc)
2. Update relevant [entry-points.mdc](mdc:.cursor/rules/entry-points.mdc) if needed
3. Adjust [vite-configuration.mdc](mdc:.cursor/rules/vite-configuration.mdc) for changes
4. Update [manifest-patterns.mdc](mdc:.cursor/rules/manifest-patterns.mdc) if entry points change
5. Test with [build-and-deployment.mdc](mdc:.cursor/rules/build-and-deployment.mdc)

## Key Principles

- **Independence**: Each extension is self-contained and can be built separately
- **Consistency**: All extensions follow the same patterns and structure
- **Modularity**: Changes to one extension don't affect others
- **Standardization**: Common patterns across all extensions for maintainability
- **API Integration**: Extensions can store and retrieve data through the Extension Data API

## Quick Reference

| Task | Primary Rule | Supporting Rules |
|------|-------------|-----------------|
| Create new extension | [extensions-structure.mdc](mdc:.cursor/rules/extensions-structure.mdc) | [entry-points.mdc](mdc:.cursor/rules/entry-points.mdc), [manifest-patterns.mdc](mdc:.cursor/rules/manifest-patterns.mdc) |
| Debug build issues | [common-issues.mdc](mdc:.cursor/rules/common-issues.mdc) | [vite-configuration.mdc](mdc:.cursor/rules/vite-configuration.mdc), [build-and-deployment.mdc](mdc:.cursor/rules/build-and-deployment.mdc) |
| Fix entry point problems | [entry-points.mdc](mdc:.cursor/rules/entry-points.mdc) | [manifest-patterns.mdc](mdc:.cursor/rules/manifest-patterns.mdc), [common-issues.mdc](mdc:.cursor/rules/common-issues.mdc) |
| Update build config | [vite-configuration.mdc](mdc:.cursor/rules/vite-configuration.mdc) | [entry-points.mdc](mdc:.cursor/rules/entry-points.mdc), [build-and-deployment.mdc](mdc:.cursor/rules/build-and-deployment.mdc) |
| Deploy extensions | [build-and-deployment.mdc](mdc:.cursor/rules/build-and-deployment.mdc) | [extensions-structure.mdc](mdc:.cursor/rules/extensions-structure.mdc), [common-issues.mdc](mdc:.cursor/rules/common-issues.mdc) |
| **API Integration** | **[api-endpoints.mdc](mdc:.cursor/rules/api-endpoints.mdc)** | **[api-data-model.mdc](mdc:.cursor/rules/api-data-model.mdc)**, **[api-query-parameters.mdc](mdc:.cursor/rules/api-query-parameters.mdc)** |
| **Store/Query Data** | **[api-data-model.mdc](mdc:.cursor/rules/api-data-model.mdc)** | **[api-endpoints.mdc](mdc:.cursor/rules/api-endpoints.mdc)**, **[api-query-parameters.mdc](mdc:.cursor/rules/api-query-parameters.mdc)** |
| **Advanced Queries** | **[api-query-parameters.mdc](mdc:.cursor/rules/api-query-parameters.mdc)** | **[api-data-model.mdc](mdc:.cursor/rules/api-data-model.mdc)**, **[api-endpoints.mdc](mdc:.cursor/rules/api-endpoints.mdc)** |
